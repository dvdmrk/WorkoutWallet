@model Web.ViewModels.RoutineViewModels.ExerciseIndexPartialViewModel

<div class="row">
    <div class="col-lg-12">
        <form id="ExerciseUpdateForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @Html.HiddenFor(m => m.Id)
            <div class="form-group">
                <label asp-for="RecommendedPercentOfMax" class="control-label"></label>
                <input asp-for="RecommendedPercentOfMax" class="form-control" />
                <span asp-validation-for="RecommendedPercentOfMax" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="RecommendedNumberOfReps" class="control-label"></label>
                <input asp-for="RecommendedNumberOfReps" class="form-control" />
                <span asp-validation-for="RecommendedNumberOfReps" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="TillFailure" /> @Html.DisplayNameFor(model => model.TillFailure)
                </label>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <input type="button" class="btn btn-primary" onclick="updateExerciseRoutine()" value="Save Changes"/>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script>
    function updateExerciseRoutine() {
        var data = $("#ExerciseUpdateForm").serialize();
        $.post("/Routine/ExerciseRoutineUpdatePartial", data);
        $('#window').modal('toggle');
    }
</script>
